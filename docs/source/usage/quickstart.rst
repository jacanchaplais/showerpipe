==========
Quickstart
==========

showerpipe provides data pipelines via a CLI, API, and dataloader.

To use the CLI, execute::

    mpiexec -n 4 showergen pipeline.yml pythia --me-file events.lhe.gz settings.cmnd

Where ``settings.cmnd`` is the input configuration for the Pythia run.
This will take a Les Houches record of hard events, distribute the events over
4 MPI processes, and run Pythia over each of those processes, to shower the
events in parallel.

The ``pipeline.yml`` file defines a branching pipeline (or DAG) of
filters over the data generated by Pythia, terminating in a sink.
Built-in filters include ``knn_filter``, which format the final state data into
a k-nearest neighbours connected graph. Built-in sinks include ``hdf_sink``,
which saves the data to a heparchy-formatted HDF5 file.

User defined filters and sinks can be implemented as plugins.
